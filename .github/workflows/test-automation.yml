name: Test Automation

on:
  push:
    branches: [ main, master,  deployment/pipeline]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
        google-chrome --version

    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f 3 | cut -d '.' -f 1)
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
        curl -L -o chromedriver.zip "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        unzip chromedriver.zip
        chmod +x chromedriver
        sudo mv chromedriver /usr/local/bin/
        chromedriver --version

    - name: Install Allure
      run: |
        curl -o allure-2.24.1.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.1/allure-commandline-2.24.1.tgz
        sudo tar -zxvf allure-2.24.1.tgz -C /opt/
        sudo ln -s /opt/allure-2.24.1/bin/allure /usr/bin/allure
        allure --version

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run UI tests with Allure
      run: |
        behave --tags=@ui
      continue-on-error: true

    - name: Run API tests with Allure
      run: |
        behave --tags=@api
      continue-on-error: true

    - name: Generate Allure Report
      if: always()
      run: |
        allure generate allure-results --clean -o allure-report

    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: allure-report

    - name: Upload Screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: failure-screenshots
        path: test_reports/screenshots/

    - name: Deploy Allure Report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure-report
        publish_branch: gh-pages